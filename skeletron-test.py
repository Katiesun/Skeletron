from PIL import Image
from PIL.ImageDraw import ImageDraw
from shapely.wkt import dumps as wkt_dumps, loads as wkt_loads
from shapely.geometry import Polygon, LineString

from Skeletron import generate_states, polygon_spine
from Skeletron.draw import draw_event, draw_peak

def get_xform(poly, dim):
    """
    """
    xmin, ymin, xmax, ymax = poly.bounds
    
    xm = (dim - 20) / (xmax - xmin)
    ym = (dim - 20) / (ymax - ymin)
    
    m = min(xm, ym)
    xb = dim/2 - m * (xmax + xmin) / 2
    yb = dim/2 - m * (ymax + ymin) / 2
    
    xform = lambda x, y: (m * x + xb, m * y + yb)
    
    return xform

if __name__ == '__main__':
    
    # doubled-up lines
    poly1 = LineString(((50, 110), (220, 160))).buffer(40, 2)
    poly2 = LineString(((80, 140), (250, 190))).buffer(40, 2)
    poly = poly1.union(poly2)
    
    # y-intersection
    poly1 = LineString(((50, 50), (150, 150), (250, 150))).buffer(40, 2)
    poly2 = LineString(((60, 240), (150, 150))).buffer(50, 2)
    poly = poly1.union(poly2)
    
    # Tandang Sora Street
    poly = wkt_loads('POLYGON ((-13625496.4396574757993221 4548638.8825872316956520, -13625496.4395814724266529 4548638.8825104515999556, -13625472.9695814736187458 4548615.1725104516372085, -13625468.6301940716803074 4548604.5436974689364433, -13625473.0774895492941141 4548593.9595814729109406, -13625483.7063025329262018 4548589.6201940709725022, -13625494.2904185280203819 4548594.0674895485863090, -13625517.7603750806301832 4548617.7774456581100821, -13625546.1603425238281488 4548646.4674127679318190, -13625550.4998064786195755 4548657.0961944973096251, -13625546.0525872316211462 4548667.6803425233811140, -13625535.4238055031746626 4548672.0198064781725407, -13625524.8396574761718512 4548667.5725872311741114, -13625496.4396574757993221 4548638.8825872316956520))')
    
    poly = Polygon(((150, 25), (250, 250), (50, 250))) # simple triangle
    poly = Polygon(((140, 25), (160, 25), (250, 100), (250, 250), (50, 250), (40, 240))) # lumpy triangle
    poly = Polygon(((75, 75), (220, 70), (230, 80), (230, 220), (220, 230), (140, 170), (75, 225))) # reflex point
    poly = LineString(((50, 50), (200, 50), (250, 100), (250, 250), (50, 250))).buffer(30, 2) # c-curve street
    poly = LineString(((50, 50), (200, 50), (250, 100), (250, 250), (50, 250), (60, 60))).buffer(30, 2) # o-curve street
    
    # Pope Court
    poly = wkt_loads('POLYGON ((-13634224.3124617021530867 4550298.5639015352353454, -13634219.5683181248605251 4550288.1094742352142930, -13634223.6060984656214714 4550277.3624617028981447, -13634234.0605257656425238 4550272.6183181237429380, -13634236.6798973549157381 4550273.6024471614509821, -13634237.5172741934657097 4550271.2377928793430328, -13634246.8672741930931807 4550258.5577928796410561, -13634256.6981047373265028 4550252.6284826928749681, -13634267.8422071188688278 4550255.3872741935774684, -13634273.7715173065662384 4550265.2181047378107905, -13634271.0127258058637381 4550276.3622071202844381, -13634268.5836506932973862 4550279.6563966833055019, -13634284.3899936098605394 4550289.7622112985700369, -13634291.0577603653073311 4550299.6607365598902106, -13634288.3892171420156956 4550311.2933971723541617, -13634278.0375564396381378 4550325.3532614707946777, -13634261.3296798337250948 4550350.6718168016523123, -13634251.8207638245075941 4550357.1047371942549944, -13634240.5481831990182400 4550354.9296798342838883, -13634234.1152628064155579 4550345.4207638241350651, -13634236.2903201673179865 4550334.1481831986457109, -13634246.2372792065143585 4550319.0748953884467483, -13634224.3124617021530867 4550298.5639015352353454))')
    
    # Young Court
    poly = wkt_loads('POLYGON ((-13634280.4842069316655397 4550128.2674772739410400, -13634282.1354401018470526 4550132.2290565436705947, -13634282.1608778350055218 4550143.7095313332974911, -13634274.0609434545040131 4550151.8454401018097997, -13634262.5804686658084393 4550151.8708778368309140, -13634254.4445598963648081 4550143.7709434563294053, -13634246.9087016396224499 4550125.6911832038313150, -13634237.3034207969903946 4550120.4672585353255272, -13634229.5860658623278141 4550109.1523921685293317, -13634227.7264196071773767 4550094.2904029153287411, -13634224.1369565669447184 4550090.3467513276264071, -13634220.2324144653975964 4550079.9808753021061420, -13634220.4524144642055035 4550067.7208753023296595, -13634228.4263944867998362 4550054.7359830392524600, -13634238.7863944880664349 4550049.2459830390289426, -13634250.2155661862343550 4550048.1615556422621012, -13634259.0640169624239206 4550055.4763944875448942, -13634260.1484443582594395 4550066.9055661847814918, -13634252.8336055129766464 4550075.7540169609710574, -13634251.8805028721690178 4550076.2590877618640661, -13634253.1130434330552816 4550077.6132486723363400, -13634256.9039341378957033 4550085.8476078314706683, -13634258.3982775434851646 4550097.7901563504710793, -13634261.9415247850120068 4550099.7171855522319674, -13634284.2964798714965582 4550097.8424688568338752, -13634295.2331280503422022 4550101.3341267826035619, -13634300.4975311439484358 4550111.5364798707887530, -13634297.0058732181787491 4550122.4731280496343970, -13634286.8035201299935579 4550127.7375311432406306, -13634280.4842069316655397 4550128.2674772739410400))')
    
    # Patton Court
    poly = wkt_loads('POLYGON ((-13634198.7968304231762886 4550288.4216539533808827, -13634196.7878466844558716 4550294.1125806123018265, -13634217.8200460430234671 4550319.9890630431473255, -13634221.1006481684744358 4550330.9908628128468990, -13634215.6409369558095932 4550341.0900460435077548, -13634204.6391371879726648 4550344.3706481698900461, -13634194.5399539563804865 4550338.9109369572252035, -13634173.3589950036257505 4550312.8514315849170089, -13634164.3782543279230595 4550315.9968257043510675, -13634154.9484469741582870 4550316.1580031262710690, -13634148.6084469743072987 4550314.1780031267553568, -13634143.7031634468585253 4550311.5679005915299058, -13634139.6023522317409515 4550308.2835682546719909, -13634136.2408656217157841 4550307.4551624637097120, -13634127.0626410860568285 4550308.4352101683616638, -13634116.0495210587978363 4550305.1928135640919209, -13634110.5547898318618536 4550295.1126410849392414, -13634113.7971864361315966 4550284.0995210586115718, -13634123.8773589152842760 4550278.6047898307442665, -13634135.6773589141666889 4550277.3447898309677839, -13634140.8592193070799112 4550277.6957456506788731, -13634146.9869198463857174 4550279.2058580508455634, -13634144.4805470015853643 4550271.1836181506514549, -13634149.8082472123205662 4550261.0141757419332862, -13634160.7663818486034870 4550257.5905470009893179, -13634170.9358242582529783 4550262.9182472126558423, -13634174.3112789914011955 4550266.9623736459761858, -13634183.2716539539396763 4550263.0331695778295398, -13634193.9663269072771072 4550267.2076059319078922, -13634198.5768304225057364 4550277.7216539531946182, -13634198.7968304231762886 4550288.4216539533808827))')
    
    dim = 500
    xform = get_xform(poly, dim)

    print 'Input', '-' * 40
    print wkt_dumps(poly)
    
    frame = 1
    index = open('frames.html', 'w')
    
    for (events, peaks) in generate_states(poly):
    
        img = Image.new('RGB', (dim, dim), (0xFF, 0xFF, 0xFF))
        drawn = set()
        
        for event in events:
            draw_event(event, img, drawn, 60, xform)
        
        for peak in peaks:
            draw_peak(peak, img, drawn, 60, xform)

        draw = ImageDraw(img)
        for (i, event) in reversed(list(enumerate(events))):
            if event.point:
                x, y = xform(event.point.x, event.point.y)
                draw.rectangle((x - 1, y, x + 7, y + 8), fill=(0xFF, 0xFF, 0xFF))
                draw.text((x, y), str(i), fill=(0x00, 0x00, 0x00))
        
        img.save('skeleton-%03d.png' % frame)
        index.write('<p><img src="skeleton-%03d.png"> (%d)</p>' % (frame, frame))
        index.flush()
    
        print '...', frame
        
        frame += 1

    print len(peaks), 'peaks.'
    
    spine = polygon_spine(poly, 70)
    
    print 'Output', '-' * 40
    print wkt_dumps(spine)

    img = Image.new('RGB', (dim, dim), (0xFF, 0xFF, 0xFF))
    draw = ImageDraw(img)
    
    polys = hasattr(poly, 'geoms') and poly.geoms or [poly]
    
    for poly in polys:
        draw.polygon([xform(*c) for c in poly.exterior.coords], outline=(0x99, 0x99, 0x99))
        
        for ring in poly.interiors:
            draw.polygon([xform(*c) for c in ring.coords], outline=(0x99, 0x99, 0x99))

    geoms = hasattr(spine, 'geoms') and spine.geoms or [spine]
    
    for geom in geoms:
        draw.line([xform(*c) for c in geom.coords], fill=(0x00, 0x00, 0x00))
    
    img.save('skeleton-fin.png')
    index.write('<p><img src="skeleton-fin.png"></p>')
    index.close()
